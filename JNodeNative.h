/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class JNodeNative */

#ifndef _Included_JNodeNative
#define _Included_JNodeNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     JNodeNative
 * Method:    start
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_JNodeNative_start
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     JNodeNative
 * Method:    fciArgCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_JNodeNative_fciArgCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     JNodeNative
 * Method:    fciArgIsNumber
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_JNodeNative_fciArgIsNumber
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     JNodeNative
 * Method:    fciArgIsFunction
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_JNodeNative_fciArgIsFunction
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     JNodeNative
 * Method:    fciArgNumberValue
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_JNodeNative_fciArgNumberValue
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     JNodeNative
 * Method:    fciArgFunctionAsPersistentHandle
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_JNodeNative_fciArgFunctionAsPersistentHandle
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     JNodeNative
 * Method:    fciArgFunctionCallWithNoArguments
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_JNodeNative_fciArgFunctionCallWithNoArguments
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     JNodeNative
 * Method:    fciSetReturnNumberValue
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_JNodeNative_fciSetReturnNumberValue
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     JNodeNative
 * Method:    functionHandleCallWithNoArguments
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_JNodeNative_functionHandleCallWithNoArguments
  (JNIEnv *, jclass, jlong);

/*
 * Class:     JNodeNative
 * Method:    functionPersistentHandleDestroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_JNodeNative_functionPersistentHandleDestroy
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
